{
  "name": "@typed/fp",
  "version": "0.0.24",
  "description": "Data Structures and Resources for fp-ts",
  "main": "./cjs/exports.js",
  "module": "./esm/exports.js",
  "browser": "./build/exports.js",
  "types": "./cjs/exports.d.ts",
  "typings": "./cjs/exports.d.ts",
  "sideEffects": false,
  "dependencies": {
    "@most/adapter": "^1.0.0",
    "@most/core": "^1.6.1",
    "@most/disposable": "^1.3.0",
    "@most/dom-event": "^2.2.0",
    "@most/scheduler": "^1.3.0",
    "@most/types": "^1.1.0",
    "fp-ts": "^3.0.0-alpha.16",
    "ts-toolbelt": "^9.6.0"
  },
  "peerDependencies": {
    "tslib": "^2.2.0"
  },
  "devDependencies": {
    "@typed/test": "^9.5.0",
    "@types/node": "^14.14.37",
    "@types/rimraf": "^3.0.0",
    "@typescript-eslint/eslint-plugin": "^4.21.0",
    "@typescript-eslint/parser": "^4.21.0",
    "@zerollup/ts-transform-paths": "^1.7.18",
    "@zoltu/typescript-transformer-append-js-extension": "^1.0.1",
    "concurrently": "^6.0.1",
    "eslint": "^7.23.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-import-resolver-custom-alias": "^1.2.0",
    "eslint-import-resolver-typescript": "^2.4.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-prettier": "^3.3.1",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "fast-glob": "^3.2.5",
    "husky": "^6.0.0",
    "lint-staged": "^10.5.4",
    "most-virtual-scheduler": "^1.0.0",
    "prettier": "^2.2.1",
    "rimraf": "^3.0.2",
    "ts-morph": "^10.0.2",
    "ts-node": "^9.1.1",
    "ts-patch": "^1.3.2",
    "tsc-watch": "^4.2.9",
    "tslib": "^2.2.0",
    "typescript": "^4.2.4"
  },
  "scripts": {
    "--maintenance--": "",
    "build": "npm run check:ts-patch && npm run build:typescript && concurrently 'npm:build:packages' 'npm:update:package-exports'",
    "build:packages": "ts-node ./tools/build-packages",
    "build:typescript": "concurrently 'npm:build:typescript:cjs' 'npm:build:typescript:esm'",
    "build:typescript:cjs": "rimraf cjs && tsc -P ./tsconfig.cjs.json",
    "build:typescript:esm": "rimraf esm && tsc -P ./tsconfig.esm.json",
    "check:ts-patch": "ts-node ./tools/checkTsPatchIsActive",
    "clean": "ts-node ./tools/cleanup",
    "lint": "eslint src --ext .js,.jsx,.ts,.tsx --fix",
    "lint-staged": "lint-staged",
    "unit-test": "typed-test",
    "test": "concurrently 'npm:lint' 'npm:unit-test'",
    "test:watch": "npm test -- --watch",
    "update": "concurrently 'npm:update:gitignore' 'npm:update:tsconfig' 'npm:update:package-exports'",
    "update:gitignore": "ts-node ./tools/update-gitignore",
    "update:tsconfig": "ts-node ./tools/update-tsconfigs",
    "update:package-exports": "ts-node ./tools/update-package-exports",
    "precommit": "concurrently 'npm:update' 'npm:lint-staged'",
    "preversion": "npm test && npm run update && npm run build",
    "postversion": "npm publish --access=public",
    "watch": "npm run check:ts-patch && concurrently 'npm:watch:cjs' 'npm:watch:esm'",
    "watch:cjs": "tsc-watch -P tsconfig.cjs.json --onSuccess 'npm run build:packages'",
    "watch:esm": "tsc-watch -P tsconfig.esm.json --onSuccess 'npm run update:package-exports'"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TylorS/typed-fp.git"
  },
  "keywords": [
    "TypeScript",
    "Typed",
    "fp-ts",
    "fp"
  ],
  "author": "Tylor Steinberger <tlsteinberger167@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TylorS/typed-fp/issues"
  },
  "homepage": "https://github.com/TylorS/typed-fp#readme",
  "*---*---*GENERATED*---*---*": "",
  "exports": {
    ".": {
      "require": "./cjs/index.js",
      "import": "./esm/index.js"
    },
    "./Adapter": {
      "require": "./cjs/Adapter.js",
      "import": "./esm/Adapter.js"
    },
    "./Branded": {
      "require": "./cjs/Branded.js",
      "import": "./esm/Branded.js"
    },
    "./Disposable": {
      "require": "./cjs/Disposable.js",
      "import": "./esm/Disposable.js"
    },
    "./Env": {
      "require": "./cjs/Env.js",
      "import": "./esm/Env.js"
    },
    "./EnvEither": {
      "require": "./cjs/EnvEither.js",
      "import": "./esm/EnvEither.js"
    },
    "./EnvOption": {
      "require": "./cjs/EnvOption.js",
      "import": "./esm/EnvOption.js"
    },
    "./Eq": {
      "require": "./cjs/Eq.js",
      "import": "./esm/Eq.js"
    },
    "./Fiber": {
      "require": "./cjs/Fiber/index.js",
      "import": "./esm/Fiber/index.js"
    },
    "./Fiber/Fiber": {
      "require": "./cjs/Fiber/Fiber.js",
      "import": "./esm/Fiber/Fiber.js"
    },
    "./Fiber/FiberId": {
      "require": "./cjs/Fiber/FiberId.js",
      "import": "./esm/Fiber/FiberId.js"
    },
    "./Fiber/Status": {
      "require": "./cjs/Fiber/Status.js",
      "import": "./esm/Fiber/Status.js"
    },
    "./Fiber/runtime/FiberChildren": {
      "require": "./cjs/Fiber/runtime/FiberChildren.js",
      "import": "./esm/Fiber/runtime/FiberChildren.js"
    },
    "./Fiber/runtime/FiberDisposable": {
      "require": "./cjs/Fiber/runtime/FiberDisposable.js",
      "import": "./esm/Fiber/runtime/FiberDisposable.js"
    },
    "./Fiber/runtime/FiberFinalizers": {
      "require": "./cjs/Fiber/runtime/FiberFinalizers.js",
      "import": "./esm/Fiber/runtime/FiberFinalizers.js"
    },
    "./Fiber/runtime/FiberReturnValue": {
      "require": "./cjs/Fiber/runtime/FiberReturnValue.js",
      "import": "./esm/Fiber/runtime/FiberReturnValue.js"
    },
    "./Fiber/runtime/FiberStatus": {
      "require": "./cjs/Fiber/runtime/FiberStatus.js",
      "import": "./esm/Fiber/runtime/FiberStatus.js"
    },
    "./Fiber/runtime/createFiber": {
      "require": "./cjs/Fiber/runtime/createFiber.js",
      "import": "./esm/Fiber/runtime/createFiber.js"
    },
    "./Fiber/runtime/createRuntime": {
      "require": "./cjs/Fiber/runtime/createRuntime.js",
      "import": "./esm/Fiber/runtime/createRuntime.js"
    },
    "./Fiber/runtime": {
      "require": "./cjs/Fiber/runtime/index.js",
      "import": "./esm/Fiber/runtime/index.js"
    },
    "./Fiber/runtime/runAsFiber": {
      "require": "./cjs/Fiber/runtime/runAsFiber.js",
      "import": "./esm/Fiber/runtime/runAsFiber.js"
    },
    "./Fiber/runtime/internal/FiberPause": {
      "require": "./cjs/Fiber/runtime/internal/FiberPause.js",
      "import": "./esm/Fiber/runtime/internal/FiberPause.js"
    },
    "./Fiber/runtime/internal/abort": {
      "require": "./cjs/Fiber/runtime/internal/abort.js",
      "import": "./esm/Fiber/runtime/internal/abort.js"
    },
    "./Fiber/runtime/internal/complete": {
      "require": "./cjs/Fiber/runtime/internal/complete.js",
      "import": "./esm/Fiber/runtime/internal/complete.js"
    },
    "./Fiber/runtime/internal/fail": {
      "require": "./cjs/Fiber/runtime/internal/fail.js",
      "import": "./esm/Fiber/runtime/internal/fail.js"
    },
    "./Fiber/runtime/internal/finish": {
      "require": "./cjs/Fiber/runtime/internal/finish.js",
      "import": "./esm/Fiber/runtime/internal/finish.js"
    },
    "./Fiber/runtime/internal/pause": {
      "require": "./cjs/Fiber/runtime/internal/pause.js",
      "import": "./esm/Fiber/runtime/internal/pause.js"
    },
    "./Fiber/runtime/internal/play": {
      "require": "./cjs/Fiber/runtime/internal/play.js",
      "import": "./esm/Fiber/runtime/internal/play.js"
    },
    "./Fiber/runtime/internal/start": {
      "require": "./cjs/Fiber/runtime/internal/start.js",
      "import": "./esm/Fiber/runtime/internal/start.js"
    },
    "./FromEnv": {
      "require": "./cjs/FromEnv.js",
      "import": "./esm/FromEnv.js"
    },
    "./FromResume": {
      "require": "./cjs/FromResume.js",
      "import": "./esm/FromResume.js"
    },
    "./Fx": {
      "require": "./cjs/Fx/index.js",
      "import": "./esm/Fx/index.js"
    },
    "./Fx/Either": {
      "require": "./cjs/Fx/Either.js",
      "import": "./esm/Fx/Either.js"
    },
    "./Fx/Env": {
      "require": "./cjs/Fx/Env.js",
      "import": "./esm/Fx/Env.js"
    },
    "./Fx/EnvEither": {
      "require": "./cjs/Fx/EnvEither.js",
      "import": "./esm/Fx/EnvEither.js"
    },
    "./Fx/EnvOption": {
      "require": "./cjs/Fx/EnvOption.js",
      "import": "./esm/Fx/EnvOption.js"
    },
    "./Fx/Fx": {
      "require": "./cjs/Fx/Fx.js",
      "import": "./esm/Fx/Fx.js"
    },
    "./Fx/IO": {
      "require": "./cjs/Fx/IO.js",
      "import": "./esm/Fx/IO.js"
    },
    "./Fx/IOEither": {
      "require": "./cjs/Fx/IOEither.js",
      "import": "./esm/Fx/IOEither.js"
    },
    "./Fx/Option": {
      "require": "./cjs/Fx/Option.js",
      "import": "./esm/Fx/Option.js"
    },
    "./Fx/Reader": {
      "require": "./cjs/Fx/Reader.js",
      "import": "./esm/Fx/Reader.js"
    },
    "./Fx/Resume": {
      "require": "./cjs/Fx/Resume.js",
      "import": "./esm/Fx/Resume.js"
    },
    "./Fx/ResumeEither": {
      "require": "./cjs/Fx/ResumeEither.js",
      "import": "./esm/Fx/ResumeEither.js"
    },
    "./Fx/ResumeOption": {
      "require": "./cjs/Fx/ResumeOption.js",
      "import": "./esm/Fx/ResumeOption.js"
    },
    "./FxT": {
      "require": "./cjs/FxT.js",
      "import": "./esm/FxT.js"
    },
    "./Hkt": {
      "require": "./cjs/Hkt.js",
      "import": "./esm/Hkt.js"
    },
    "./IOEither": {
      "require": "./cjs/IOEither.js",
      "import": "./esm/IOEither.js"
    },
    "./MonadRec": {
      "require": "./cjs/MonadRec.js",
      "import": "./esm/MonadRec.js"
    },
    "./Option": {
      "require": "./cjs/Option.js",
      "import": "./esm/Option.js"
    },
    "./Provide": {
      "require": "./cjs/Provide.js",
      "import": "./esm/Provide.js"
    },
    "./Reader": {
      "require": "./cjs/Reader.js",
      "import": "./esm/Reader.js"
    },
    "./Ref": {
      "require": "./cjs/Ref.js",
      "import": "./esm/Ref.js"
    },
    "./Resume": {
      "require": "./cjs/Resume.js",
      "import": "./esm/Resume.js"
    },
    "./ResumeEither": {
      "require": "./cjs/ResumeEither.js",
      "import": "./esm/ResumeEither.js"
    },
    "./ResumeOption": {
      "require": "./cjs/ResumeOption.js",
      "import": "./esm/ResumeOption.js"
    },
    "./Scheduler": {
      "require": "./cjs/Scheduler.js",
      "import": "./esm/Scheduler.js"
    },
    "./Stream": {
      "require": "./cjs/Stream.js",
      "import": "./esm/Stream.js"
    },
    "./function": {
      "require": "./cjs/function.js",
      "import": "./esm/function.js"
    }
  }
}
